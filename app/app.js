// Generated by CoffeeScript 1.6.2
(function() {
  var app, express, fs, http, io, port, server, sio, static_dir, usernames;

  sio = require('socket.io');

  express = require('express');

  http = require('http');

  app = express();

  server = http.createServer(app);

  fs = require('fs');

  static_dir = __dirname + "/../pub/";

  app.configure(function() {
    app.use(express.favicon());
    return app.use(express.logger('dev'));
  });

  io = sio.listen(server);

  app.use('/js', express["static"]("" + static_dir + "js"));

  app.use('/css', express["static"]("" + static_dir + "css"));

  app.use('/assets', express["static"]("" + static_dir + "assets"));

  app.get('/chat.html', function(req, res) {
    return fs.readFile("" + static_dir + "chat.html", function(err, data) {
      if (err != null) {
        return res.end(404);
      }
      res.writeHead(200, {
        'Content-Type': 'text/html'
      });
      return res.end(data);
    });
  });

  usernames = {};

  io.sockets.on('connection', function(socket) {
    socket.on('chat', function(data) {
      console.log("get chat " + data);
      return io.sockets.emit('updatechat', socket.username, data);
    });
    socket.on('adduser', function(username) {
      console.log("new user " + username);
      socket.username = username;
      usernames[username] = username;
      socket.emit('updatechat', 'SERVER', 'you have connected');
      console.log("The useername is " + username);
      socket.broadcast.emit('updatechat', 'SERVER', "" + username + " has connected");
      return io.sockets.emit('updateusers', usernames);
    });
    return socket.on('disconnect', function() {
      console.log("user disconnect");
      delete usernames[socket.username];
      io.sockets.emit('updateusers', usernames);
      return socket.broadcast.emit('updatechat', 'SERVER', "" + socket.username + "      has disconnected");
    });
  });

  port = process.env.PORT || 3000;

  server.listen(port, function() {
    return console.log("Listening on " + port);
  });

}).call(this);
